"""empty message

Revision ID: 5a201a91a996
Revises: 
Create Date: 2025-03-03 19:39:02.300288

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5a201a91a996'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('battery_chemistry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('quarter', sa.Integer(), nullable=True),
    sa.Column('chemistry_type', sa.String(length=50), nullable=False),
    sa.Column('market_share', sa.Float(), nullable=False),
    sa.Column('lithium_intensity', sa.Float(), nullable=True),
    sa.Column('region', sa.String(length=50), nullable=True),
    sa.Column('is_forecast', sa.Boolean(), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('company_announcements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company', sa.String(length=100), nullable=False),
    sa.Column('announcement_date', sa.Date(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('url', sa.String(length=500), nullable=True),
    sa.Column('announcement_type', sa.String(length=50), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('importance', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ev_market_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('quarter', sa.Integer(), nullable=True),
    sa.Column('region', sa.String(length=50), nullable=False),
    sa.Column('ev_sales', sa.Integer(), nullable=False),
    sa.Column('ev_penetration', sa.Float(), nullable=True),
    sa.Column('lithium_demand', sa.Float(), nullable=True),
    sa.Column('avg_battery_size', sa.Float(), nullable=True),
    sa.Column('is_forecast', sa.Boolean(), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lithium_mines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('company', sa.String(length=100), nullable=False),
    sa.Column('country', sa.String(length=50), nullable=False),
    sa.Column('region', sa.String(length=50), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('capacity', sa.Float(), nullable=True),
    sa.Column('start_year', sa.Integer(), nullable=True),
    sa.Column('coordinates', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lithium_prices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('compound', sa.String(length=50), nullable=False),
    sa.Column('grade', sa.String(length=50), nullable=True),
    sa.Column('region', sa.String(length=50), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('price_low', sa.Float(), nullable=True),
    sa.Column('price_high', sa.Float(), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('lithium_prices', schema=None) as batch_op:
        batch_op.create_index('idx_lithium_prices_date_compound_region', ['date', 'compound', 'region'], unique=False)

    op.create_table('news_articles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('url', sa.String(length=500), nullable=False),
    sa.Column('source', sa.String(length=100), nullable=False),
    sa.Column('published_date', sa.DateTime(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('image_url', sa.String(length=500), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('sentiment_score', sa.Float(), nullable=True),
    sa.Column('importance', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('price_forecasts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_date', sa.Date(), nullable=False),
    sa.Column('forecast_date', sa.Date(), nullable=False),
    sa.Column('compound', sa.String(length=50), nullable=False),
    sa.Column('region', sa.String(length=50), nullable=False),
    sa.Column('forecast_price', sa.Float(), nullable=False),
    sa.Column('forecast_low', sa.Float(), nullable=True),
    sa.Column('forecast_high', sa.Float(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('model_name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('price_forecasts', schema=None) as batch_op:
        batch_op.create_index('idx_price_forecasts_forecast_date_compound', ['forecast_date', 'compound'], unique=False)

    op.create_table('processing_plants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('company', sa.String(length=100), nullable=False),
    sa.Column('country', sa.String(length=50), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('capacity', sa.Float(), nullable=True),
    sa.Column('product', sa.String(length=50), nullable=True),
    sa.Column('start_year', sa.Integer(), nullable=True),
    sa.Column('coordinates', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_developments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_name', sa.String(length=100), nullable=False),
    sa.Column('company', sa.String(length=100), nullable=False),
    sa.Column('country', sa.String(length=50), nullable=False),
    sa.Column('project_type', sa.String(length=50), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('milestone', sa.String(length=255), nullable=True),
    sa.Column('investment', sa.Float(), nullable=True),
    sa.Column('capacity', sa.Float(), nullable=True),
    sa.Column('expected_completion', sa.Date(), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('regulation_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('country', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('impact_level', sa.String(length=20), nullable=True),
    sa.Column('market_impact', sa.Text(), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('related_commodity_prices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('commodity', sa.String(length=50), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('unit', sa.String(length=20), nullable=False),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('related_commodity_prices', schema=None) as batch_op:
        batch_op.create_index('idx_related_commodity_date_commodity', ['date', 'commodity'], unique=False)

    op.create_table('research_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('publisher', sa.String(length=100), nullable=False),
    sa.Column('published_date', sa.Date(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('file_path', sa.String(length=500), nullable=True),
    sa.Column('key_findings', sa.Text(), nullable=True),
    sa.Column('is_premium', sa.Boolean(), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supply_demand_balance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('quarter', sa.Integer(), nullable=True),
    sa.Column('supply', sa.Float(), nullable=False),
    sa.Column('demand', sa.Float(), nullable=False),
    sa.Column('balance', sa.Float(), nullable=False),
    sa.Column('is_forecast', sa.Boolean(), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trade_flows',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('quarter', sa.Integer(), nullable=True),
    sa.Column('exporter', sa.String(length=50), nullable=False),
    sa.Column('importer', sa.String(length=50), nullable=False),
    sa.Column('material_type', sa.String(length=50), nullable=False),
    sa.Column('volume', sa.Float(), nullable=False),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('company', sa.String(length=120), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('mine_production',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mine_id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('quarter', sa.Integer(), nullable=True),
    sa.Column('production', sa.Float(), nullable=True),
    sa.Column('grade', sa.Float(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('is_estimate', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['mine_id'], ['lithium_mines.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mine_id', 'year', 'quarter', name='unique_mine_period')
    )
    op.create_table('news_entities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('article_id', sa.Integer(), nullable=False),
    sa.Column('entity_name', sa.String(length=100), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['article_id'], ['news_articles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('news_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('article_id', sa.Integer(), nullable=False),
    sa.Column('tag', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['article_id'], ['news_articles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('processing_production',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plant_id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('quarter', sa.Integer(), nullable=True),
    sa.Column('production', sa.Float(), nullable=True),
    sa.Column('capacity_utilization', sa.Float(), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('is_estimate', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['plant_id'], ['processing_plants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('plant_id', 'year', 'quarter', name='unique_plant_period')
    )
    op.create_table('user_alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('alert_type', sa.String(length=50), nullable=False),
    sa.Column('threshold', sa.Float(), nullable=True),
    sa.Column('frequency', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('preference_key', sa.String(length=50), nullable=False),
    sa.Column('preference_value', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_preferences')
    op.drop_table('user_alerts')
    op.drop_table('processing_production')
    op.drop_table('news_tags')
    op.drop_table('news_entities')
    op.drop_table('mine_production')
    op.drop_table('users')
    op.drop_table('trade_flows')
    op.drop_table('supply_demand_balance')
    op.drop_table('research_reports')
    with op.batch_alter_table('related_commodity_prices', schema=None) as batch_op:
        batch_op.drop_index('idx_related_commodity_date_commodity')

    op.drop_table('related_commodity_prices')
    op.drop_table('regulation_events')
    op.drop_table('project_developments')
    op.drop_table('processing_plants')
    with op.batch_alter_table('price_forecasts', schema=None) as batch_op:
        batch_op.drop_index('idx_price_forecasts_forecast_date_compound')

    op.drop_table('price_forecasts')
    op.drop_table('news_articles')
    with op.batch_alter_table('lithium_prices', schema=None) as batch_op:
        batch_op.drop_index('idx_lithium_prices_date_compound_region')

    op.drop_table('lithium_prices')
    op.drop_table('lithium_mines')
    op.drop_table('ev_market_data')
    op.drop_table('company_announcements')
    op.drop_table('battery_chemistry')
    # ### end Alembic commands ###
